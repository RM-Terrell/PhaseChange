@model IEnumerable<PhaseChange.Models.Customer>


@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>
<p>
    @Html.ActionLink("New Customer", "New", "Customers", null, new { @class = "btn btn-primary" })
</p>

<table id="customers" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
       
    </tbody>
</table>

@section scripts
{
<script>
    $(document).ready(function () {
        var table = $("#customers").DataTable({ //Storing as a var in order to have a reference to reload the table upon customer deletion
            ajax: {
                url: "/api/customers",
                dataSrc: ""
            },
            columns: [  //The columns are spearated by commas
                {
                    data: "name",
                    render: function (data, type, customer) {
                        return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>"; //Typos are bad m'kay. Make sure you enter a + when you mean it and not a =
                    }
                },
                {
                    data: "membershipType.name"
                },
                {
                    data: "id",
                    render: function (data) {
                        return "<button class ='btn-link js-delete' data-customer-id='" + data + "'>Delete</button>";
                    }
                }
            ]
        });

        $("#customers").on("click", ".js-delete", function () {
            var button = $(this);

            bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                if (result) {
                    $.ajax({
                        url: "/api/customers/" + button.attr("data-customer-id"),
                        method: "DELETE",
                        success: function () {
                            table.row(button.parents("tr")).remove().draw(); //First version of this only deleted row off DOM. This deletes from list and redraws
                            
                        }
                    });
                }
            });
        });
    });
</script>
}